#lang racket

; length: returns the length of the list

(define accumulate
  (lambda (op base term ls)
    (if (null? ls)
        base
        (op (term (car ls)) 
            (accumulate op base term (cdr ls))))))

(define length
  (lambda (ls)
    (if (null? ls)
        0
        (length (cdr ls)))))

(define append
  (lambda (ls1 ls2)
    (accumulate cons ls2  (lambda(x) x) ls1)))
